# Copyright (c) 2021 Veli Matti Lastum√§ki (Velsku at lampopumput.info),
#                    Joonas Ihonen (puu at lampopumput.info),
#                    Ilkka Roivainen (iro at lampopumput.info)
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

###########################################################################
##        Home Assistant and Logger settings                             ##
##        ----------------------------------------------------------     ##
###########################################################################
# Enable/disabe HomeAssistant
#api:                   # !! If home Assistant in use remove comment (#)
#  reboot_timeout: 0s   # !! If home Assistant in use remove comment (#)
#####################
# Select logger-level
logger:          #  After installation and testing phase it may be wise to reduce debug communication
  level: INFO    # by adding comment (#) at the begining of this line more log-info

###########################################################################
##        This module specifies HW of your SonOff Elite Mitsurunner      ##
##        ----------------------------------------------------------     ##
##  ! updateIDs of your Dallas DS18B20 sensors                           ##
##  ! update used IO-pins                                                ##
##  hardware platform (preconfigured for SonOff)                         ##
##########################################################################

# Define these values according to your hardware see: https://esphome.io
esp32:
  board: nodemcu-32s
  
###########################################################################
substitutions:

# Common reboot timeout for WiFi, MQTT and HomeAssiant. Change value if needed.
  common_reboot_timeout: '360min'

# Addresses for your Dallas DS18B20 temperature sensors - you need to update these
  dallas_address_heat_exchanger_temp: '0x8501191438ccd428'
  dallas_address_outdoor_temp:        '0x2dd4e3391e64ff28'

# IO-pins:
  dallas_pin: 'GPIO25' # Pin for DS18B20 1-wire temperature sensors. Set to the pin number you are using.
  relay_pin: 'GPIO4' # Pin for controlling relay
  dallas_power_pin: 'GPIO27'

#############################################################################
#########################Sonoff Th Elite display#############################
###            two LCD screens alternate every 5 seconds                  ###
#############################################################################
###   heat_exchanger_temp  ###########  Wifi-signal        ##################
###   outdoor_temp         ###########  Dallas error count ##################
#############################################################################
### RED LED = POWER #### GREEN LED = Defrost prevention control activated ###
#############################################################################

output:
  - platform: gpio
    pin: GPIO16
    inverted: true
    id: red_led

  - platform: gpio
    pin: GPIO13
    inverted: true
    id: green_led

#  - platform: gpio
#    pin: GPIO15
#    inverted: true
#    id: yellow_led


display:
  platform: tm1621
  id: tm1621_display
  update_interval: 5s
  cs_pin: GPIO17
  data_pin:
    number: GPIO5
    ignore_strapping_warning: true
  read_pin: GPIO23
  write_pin: GPIO18
  lambda: |-
    static int n = 0;
    id(red_led).turn_on();                                //Keep POWER-led ON

    if (id(gpio_relay).state) id(green_led).turn_on();    //Green LED ON if defrost_prevention_Relay is ON
    else id(green_led).turn_off();

    if (n == 0) {
       n = 1;
       it.printf(0, "%.1f", id(heat_exchanger_temp).state);
       it.display_celsius(true);
       it.printf(1, "%.1f", id(outdoor_temp).state);
       it.display_humidity(false);
       }
     else {
       n = 0;
       it.printf(0, "%.1f", id(wifi_signal_dbm).state);
       it.display_celsius(false);
       it.printf(1,"%.1i", id(outdoor_temp_errors)+ id(heat_exchanger_temp_errors));
       it.display_humidity(false);
       }


